[{"E:\\Nitin\\FL\\React_Docker_Proj\\sample-app\\src\\reportWebVitals.js":"1","E:\\Nitin\\FL\\React_Docker_Proj\\sample-app\\src\\index.js":"2","E:\\Nitin\\FL\\React_Docker_Proj\\sample-app\\src\\App.js":"3","E:\\Nitin\\FL\\React_Docker_Proj\\sample-app\\src\\Components\\Table.js":"4"},{"size":362,"mtime":1610708982323,"results":"5","hashOfConfig":"6"},{"size":500,"mtime":1610708982323,"results":"7","hashOfConfig":"6"},{"size":4218,"mtime":1610756428874,"results":"8","hashOfConfig":"6"},{"size":1016,"mtime":1610750854633,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"79860b",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"E:\\Nitin\\FL\\React_Docker_Proj\\sample-app\\src\\reportWebVitals.js",[],"E:\\Nitin\\FL\\React_Docker_Proj\\sample-app\\src\\index.js",[],["21","22"],"E:\\Nitin\\FL\\React_Docker_Proj\\sample-app\\src\\App.js",["23"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { \n  Container, \n  Grid, \n  NativeSelect, \n  FormControl, \n  Input} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TableList from \"../src/Components/Table\";\n\nfunction App() {\n\n  const rows = [\n    createData(1, 159, 1, 24, 183),\n    createData(2, 89, 2, 5, 84),\n    createData(3, 800, 4, 10, 8)\n  ];\n\n  const [state, setState] = useState({\n    number1: 0,\n    number2: 0,\n    sign: 1,\n    output: 0,\n    rows: rows\n  });\n\n  const handleChange = (event) => {\n    console.log(event.target);\n    console.log(\"name- \" + event.target.name + \" value- \" + event.target.value)\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n    Calc();\n  };\n\n  useEffect(() => {\n    console.log('I am called');\n    SetNumbers() ;\n  }, []);\n\n  const SetNumbers = () => {\n      axios({\n        'method': 'GET',\n        'url': \"https://cors-anywhere.herokuapp.com/http://www.randomnumberapi.com/api/v1.0/random?min=1&max=1000&count=2\",\n        'headers': { \"Access-Control-Allow-Origin\": \"http://localhost:3000\" },\n        'params': {\n          'min': 1,\n          'max': 1000,\n          'count': 2\n        }\n      })\n        .then((response) => {\n          console.log(\"get Random Numbers\" + response.data);\n          setState({\n            ...state,\n            number1: response.data[0],\n            number2: response.data[1]\n          });\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n        \n        console.log(\"check1\")\n        Calc();\n  }\n\n  const Calc = () => {\n    console.log(state)\n    let output = 0;\n    switch (state.sign) {\n      case 1:\n        output = (state.number1 + state.number2);\n        break;\n      case 2:\n        output = (state.number1 - state.number2);\n        break;\n      case 3:\n        output = (state.number1 * state.number2);\n        break;\n      case 4:\n        output = (state.number1 / state.number2);\n        break;\n      default:\n        break;\n    }\n    setState({\n      ...state,\n      output: output\n    });\n  }\n\n  const updateRow = () => {\n    rows.push(createData(rows.length+1, state.number1, state.sign, state.number2, state.output))\n    setState({\n      ...state,\n      rows: rows\n    })\n  }\n  \nfunction createData(id, number1, sign, number2, output) {\n    let sign1 = switchSign(sign);\n    console.log(id + \" , \" + number1 + \" , \" + sign1 + \" , \" + number2 + \" , \" + output)\n    return { id, number1, sign1, number2, output };\n}\n\nfunction switchSign(sign) {\n    switch (sign) {\n        case 1:\n            return \"+\";\n        case 2:\n            return \"-\";\n        case 3:\n            return \"x\";\n        case 4:\n            return \":\";\n        default:\n            break;\n    }\n}\n\n  return (\n    <div style={{ marginTop: 20, padding: 30 }}>\n\n      <Grid container justify=\"center\">\n\n        <form style={{ width: \"50%\" }}>\n\n\n          <FormControl>\n            <Input id=\"number1\" type=\"text\" value={state.number1} onChange={handleChange} />\n          </FormControl>\n\n          <NativeSelect \n            name=\"sign\"\n            onChange={handleChange} \n            value={state.sign}\n            inputProps={{ 'sign-id': 'sign' }}>\n            <option value={0}></option>\n            <option value={1}>+</option>\n            <option value={2}>-</option>\n            <option value={3}>x</option>\n            <option value={4}>:</option>\n          </NativeSelect>\n\n          <FormControl>\n            <Input id=\"number2\" type=\"text\" value={state.number2} onChange={handleChange} />\n          </FormControl>\n\n          <FormControl>\n            <Input id=\"output\" value={state.output} />\n          </FormControl>\n\n          <Button variant=\"contained\" color=\"primary\" size=\"medium\" onClick={SetNumbers}>\n            Request\n          </Button>\n\n          <Button variant=\"contained\" color=\"primary\" size=\"medium\" onClick={updateRow}>\n            Send\n          </Button>\n        </form>\n\n        <br /><br /><br />\n\n        <Container maxWidth=\"sm\">\n          <TableList list={rows} />\n        </Container>\n\n      </Grid>\n\n    </div>\n\n  )\n}\n\nexport default App;","E:\\Nitin\\FL\\React_Docker_Proj\\sample-app\\src\\Components\\Table.js",["24"],"import React, { useState } from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Paper\r\n} from \"@material-ui/core\";\r\n\r\nfunction TableList(props) {\r\n\r\n    return (<div>\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableBody>\r\n                    {props.list.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                            <TableCell align=\"center\">{row.number1}</TableCell>\r\n                            <TableCell align=\"center\">{row.sign1}</TableCell>\r\n                            <TableCell align=\"center\">{row.number2}</TableCell>\r\n                            <TableCell align=\"center\">=</TableCell>\r\n                            <TableCell align=\"center\">{row.output}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    </div>)\r\n};\r\n\r\nexport default TableList;",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":43,"column":6,"nodeType":"31","endLine":43,"endColumn":8,"suggestions":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":17,"nodeType":"35","messageId":"36","endLine":1,"endColumn":25},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'SetNumbers'. Either include it or remove the dependency array.","ArrayExpression",["39"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"40","fix":"41"},"Update the dependencies array to be: [SetNumbers]",{"range":"42","text":"43"},[911,913],"[SetNumbers]"]